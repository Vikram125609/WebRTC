A middleware function is a function that gets executed for every incoming connection.
Usage of middelware in socket.io
1. Logging 
2. Authentication
3. Rate Limiting

Note: this function will be executed only once per connection (even if the connection consists in multiple HTTP requests).

Basic Emit 
The Socket.IO API is inspired from the Node.js EventEmitter, which means you can emit events on one side and register listeners on the other:

Acknowledgement in socket.io
Events are great, but in some cases you may want a more classic request-response API. In Socket.IO, this feature is named acknowledgements.

Server side 
io.on("connection", (socket) => {
  socket.on("update item", (arg1, arg2, callback) => {
    console.log(arg1); // 1
    console.log(arg2); // { name: "updated" }
    callback({
      status: "ok"
    });
  });
});

Client side 
socket.emit("update item", "1", { name: "updated" }, (response) => {
  console.log(response.status); // ok
});
